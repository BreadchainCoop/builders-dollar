BuilderManager::initialize
├── when passing valid settings
│   ├── it sets the settings
│   └── it deploys the contract
└── when passing invalid settings
    └── it reverts with SettingsNotSet

BuilderManager::OP_SCHEMA_638
└── when called
    └── it returns the OP_SCHEMA_638

BuilderManager::TOKEN
└── when called 
    └── it returns the token address

BuilderManager::EAS
└── when called
    └── it returns the EAS address

BuilderManager::optimismFoundationAttester
├── when the attester is an Optimism Foundation Attester
│   └── it returns true
└── when the attester is not an Optimism Foundation Attester
    └── it returns false

BuilderManager::eligibleVoter
├── when the voter is eligible and vouched
│   └── it returns true
└── when the voter is not eligible or vouched
    └── it returns false

BuilderManager::eligibleProject
├── when the project is eligible
│   └── it returns the project
└── when the project is not eligible
    └── it returns address(0)

BuilderManager::projectToExpiry
├── when the project is eligible
│   └── it returns the expiry
└── when the project is not eligible
    └── it returns 0

BuilderManager::projectToVouches
├── when the project is eligible
│   └── it returns the vouches
└── when the project is not eligible
    └── it returns 0

BuilderManager::voterToProjectVouch
├── when the voter has vouched for the project
│   └── it returns true
└── when the voter has not vouched for the project
    └── it returns false

BuilderManager::settings
└── it returns the settings

BuilderManager::currentProjects
├── when there are projects
│   └── it returns the current projects
└── when there are no projects
    └── it returns an empty array

BuilderManager::optimismFoundationAttesters
├── when there are attesters
│   └── it returns the optimism foundation attesters
└── when there are no attesters
    └── it returns an empty array

BuilderManager::vouch
├── when passing valid project attestation
│   ├── it sets the project as eligible
│   ├── it emits ProjectValidated
│   └── it increments the project's vouches
├── when passing project attestation that is already eligible
│   └── it increments the project's vouches
└── when passing invalid project attestation
    └── it reverts with InvalidProjectAttestation

BuilderManager::vouch
├── when passing valid project attestation and valid identity attestation
│   ├── it sets the project as eligible
│   ├── it sets the identity as eligible
│   ├── it emits ProjectValidated
│   ├── it emits VoterValidated
│   └── it increments the project's vouches
├── when passing invalid project attestation
│   └── it reverts with InvalidProjectAttestation
└── when passing invalid identity attestation
    └── it reverts with InvalidIdentityAttestation

BuilderManager::validateOptimismVoter
├── when passing valid identity attestation
│   ├── it sets the identity as eligible
│   ├── it emits VoterValidated
│   └── it returns true
├── when passing identity attestation that is already eligible
│   └── it reverts with AlreadyVerified
└── when passing invalid identity attestation
    └── it returns false

BuilderManager::distributeYield
├── when the cycle is ready
│   ├── it distributes the yield
│   └── it emits YieldDistributed
├── when there are no projects
│   └── it reverts with YieldNoProjects
└── when the cycle is not ready
    └── it reverts with CycleNotReady

BuilderManager::modifyParams
├── when passing valid param and value
│   ├── it modifies the param
│   └── it emits ParamsModified
└── when passing invalid param or value
    └── it reverts with InvalidParam

BuilderManager::updateOpFoundationAttester
├── when passing valid attester and status
│   ├── it updates the attester
│   └── it emits OpFoundationAttesterUpdated
└── when passing invalid attester or status
    └── it reverts with InvalidAttester

BuilderManager::batchUpdateOpFoundationAttesters
├── when passing valid attesters and statuses
│   ├── it updates the attesters
│   └── it emits OpFoundationAttestersUpdated
└── when passing invalid attesters or statuses
    └── it reverts with InvalidAttesters
